plugins {
    id 'java-library'
    id 'maven-publish'
}

group = 'com.webkreator'
version = '4.0.0'

compileJava {
    options.compilerArgs += ["-parameters"]
}

repositories {
    mavenCentral()
}

dependencyLocking {
    lockAllConfigurations()
}

// The dependencies are locked; to update the locks, run: ./gradlew dependencies --write-locks
dependencies {

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.12'

    // https://mvnrepository.com/artifact/commons-cli/commons-cli
    implementation group: 'commons-cli', name: 'commons-cli', version: '1.6.0'

    // https://mvnrepository.com/artifact/commons-codec/commons-codec
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.16.1'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-email
    api group: 'org.apache.commons', name: 'commons-email', version: '1.6.0'

    // https://mvnrepository.com/artifact/javax.mail/javax.mail-api
    implementation group: 'javax.mail', name: 'javax.mail-api', version: '1.6.2'

    // https://mvnrepository.com/artifact/it.sauronsoftware.cron4j/cron4j
    implementation group: 'it.sauronsoftware.cron4j', name: 'cron4j', version: '2.2.5'

    // https://mvnrepository.com/artifact/org.apache.velocity/velocity-engine-core
    implementation group: 'org.apache.velocity', name: 'velocity-engine-core', version: '2.3'

    constraints {
        implementation('commons-collections:commons-collections:3.2.2') {
            because 'https://app.snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078'
        }
    }

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'

    // https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator
    implementation group: 'org.hibernate.validator', name: 'hibernate-validator', version: '6.2.5.Final'

    // https://mvnrepository.com/artifact/org.glassfish/javax.el
    implementation group: 'org.glassfish', name: 'javax.el', version: '3.0.1-b12'

    // https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api
    compileOnly group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '4.0.4'


    // Test dependencies.

    // https://mvnrepository.com/artifact/junit/junit
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'

    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.11.0'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.12'

    // https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api
    testImplementation group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '4.0.4'
}

sourceSets {
    main {
        java.srcDirs = ["src/main/java"]
        resources.srcDirs = ["src/main/resources"]
    }

    test {
        java.srcDirs = ["src/test/java"]
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    //archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/ivanr/qlue"
            credentials {
                // Working with the Gradle registry
                // https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-gradle-registry
                username = System.getenv("GITHUB_PACKAGES_USERNAME")
                password = System.getenv("GITHUB_PACKAGES_PASSWORD")
            }
        }
    }
}
