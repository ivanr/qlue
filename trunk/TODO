
To Do
-----
 
- Session handling

  - Use very long sessions, practically disabling the underlying expiration mechanism.
  
  - Periodically rotate session IDs
  
  - Asks users to re-authenticate in regular intervals (that will also rotate their session IDs)
  
  - Leave it to the underlying session storage mechanism to remove sessions when it
    runs out of storage space
    
  - Perhaps feel free to collect sessions that do not have any active processes       
  
- Display a friendly error page when a process is not found (but not when a deleted
  session is the root cause)
  
- Debug mode

	- Debug mode output should display all log messages emitted during the
  	  processing of the current request.

	- On fatal error, dump transaction context into a file; it would also be useful to have all
      the log entries created during/for that transaction
  
	- On error, notify admin via email and include transaction context in the attachment

- When behind a trusted proxy, record the supplied unique ID (which is transported in a header) 
 
- Finally (before release candidate):

  - Implement logging consistently throughout the framework
  
  - Have consistent error messages
  
  - Review class and method access permissions
  
  - Review code
   

Improvements
------------

- Routing: Add support for string interpolation on the right-hand side. Use case:
  redirect to a different URL, using some of the regex captures.

- Routing: Add support for programmatic route manipulation

- Users should be able to create private instances of MimeTypes, they should be able to
  tell the framework to use another mime type, and/or to override the settings
  
- Routing: Process .vm files directly when page class not available

  - Would that be surprising the users? What if we expose some internal templates that way?
  
- Routing: control resource caching from the routing configuration

- Binding: Implement binding for JSON payloads

- Binding: Add support for validation of fixed-value fields (e.g.,
  drop-down boxes). Provide list to Qlue.

  